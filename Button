<?php

#VM_BUTTON_CSS
function VM_BUTTON_CSS() { ?><style type="text/css">
	.txtcenter{text-align:center}
	.txtright{text-align:right}
</style><?php } add_action ("wp_head", "VM_BUTTON_CSS");

#VM_BUTTON_ARR
function VM_BUTTON_ARR() { return array(
	"href" => "#",
	"target" => "_self",
	"text" => "VIEW MORE",
	"align" => "",
	"w-btn" => "400px",
	"c-btn" => "bg-clr1 clrw",
	"animation" => "",
); }

function VM_BUTTON_SHORTCODE( $atts ) { $VM_BUTTON_ARR = VM_BUTTON_ARR(); $atts = shortcode_atts( $VM_BUTTON_ARR, $atts ); $href = vc_build_link($atts["href"]); ob_start(); ?>
	<div class="<?php echo $atts["align"]; ?> <?php if(!empty($atts["animation"])) { echo "wpb_animate_when_almost_visible wpb_".$atts["animation"]." ".$atts["animation"]; } ?>"><a class="vm-button vm-inline-block txtcenter pad-small <?php echo $atts["c-btn"]; ?>" style="max-width:<?php echo $atts["w-btn"]; ?>; width:100%;" href="<?php echo $href["url"]; ?>" target="<?php echo $atts["target"]; ?>"><?php echo $atts["text"]; ?></a></div>
<?php $OUTPUT = ob_get_contents(); ob_get_clean(); return $OUTPUT; } add_shortcode( 'VM_BUTTON', 'VM_BUTTON_SHORTCODE' );

if(class_exists("WPBakeryShortCode")) { # WP Bakery Class Exists
    class VC_VM_BUTTON extends WPBakeryShortCode { #Element Class
        function __construct() { add_action( 'init', array( $this, 'vc_vm_home_mapping' ) ); add_shortcode( 'vc_vm_home', array( $this, 'vc_vm_home_html' ) ); } #Element Init
        public function vc_vm_home_mapping() { #Element Mapping
            if ( !defined( 'WPB_VC_VERSION' ) ) { return; } #Stop all if VC is not enabled
            vc_map( #Map the block with vc_map()
                array(
                    'name' => __('VM BUTTON', 'vmf'),
                    'base' => 'VM_BUTTON',
                    'description' => __('VM BUTTON SHORTCODE', 'vmf'),
                    'category' => __('Ventix Media', 'vmf'),
                    'params' => array(
                        array( 'type' => 'textfield', 'param_name' => 'text', 'heading' => __( 'Title', 'vmf' ), ),
                        array( 'type' => 'vc_link', 'param_name' => 'href', 'heading' => __( 'Sub Title', 'vmf' ), ),
                        array( 'type' => 'dropdown', 'param_name' => 'target', 'heading' => __('Link Opening'), 'value' => array('Current' => '_self', 'New Window' => '_blank'), ),
                        array( 'type' => 'dropdown', 'param_name' => 'align', 'heading' => __('Alignment'), 'value' => array('Left' => 'txtleft', 'Right' => 'txtright', 'Center' => 'txtcenter'), ),
                        array( 'type' => 'textfield', 'param_name' => 'w-btn', 'heading' => __( 'Width', 'vmf' ), ),
                        array( 'type' => 'textfield', 'param_name' => 'c-btn', 'heading' => __( 'Class', 'vmf' ), ),
                        array( 'type' => 'animation_style', 'param_name' => 'animation', 'heading' => __( 'Animation Style', 'vmf' ), 'description' => __( 'Choose your animation style', 'vmf' ), ),
            ) ) );
        }
        public function vc_vm_home_html( $atts ) { $VM_BUTTON_TITLE_ARR = VM_BUTTON_TITLE_ARR(); extract(  shortcode_atts( $VM_BUTTON_TITLE_ARR, $atts ) ); $html = do_shortcode("[VM_BUTTON_TITLE]"); return $html; } #Fill $html
    } new VC_VM_BUTTON(); #Element Class Init
} # WP Bakery Class Exists
